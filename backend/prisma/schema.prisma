// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String   @default("")
  image     String   @default("")
  onboarded Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  restaurants    Restaurant[]
  scrapeRequests ScrapeRequest[]

  @@index([email])
}

model ScrapeRequest {
  id        String   @id @default(uuid())
  pincode   String
  limit     Int
  cuisines  String[]
  userId    String
  status    String   @default("pending")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  swiggyRestaurants SwiggyRestaurant[]
  user              User               @relation(fields: [userId], references: [id])
}

model Restaurant {
  id        String   @id @default(uuid())
  userId    String
  name      String
  cuisines  String[]
  pincode   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  user      User       @relation(fields: [userId], references: [id])
  menuItems MenuItem[]

  @@index([userId])
}

model MenuItem {
  id           String   @id @default(uuid())
  restaurantId String
  name         String
  price        String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  restaurant Restaurant @relation(fields: [restaurantId], references: [id])

  @@index([restaurantId])
}

model SwiggyRestaurant {
  id              String   @id @default(uuid())
  url             String
  name            String
  rating          String   @default("0")
  deliveryTime    String   @default("")
  cuisines        String[] @default([])
  pincode         String
  area            String   @default("")
  scrapeRequestId String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // Relationships
  swiggyMenuItems SwiggyMenuItem[]
  scrapeRequest   ScrapeRequest    @relation(fields: [scrapeRequestId], references: [id], onDelete: Restrict)

  @@index([scrapeRequestId])
}

model SwiggyMenuItem {
  id                 String   @id @default(uuid())
  swiggyRestaurantId String
  name               String
  imageUrl           String
  price              String
  rating             String   @default("0")
  description        String   @default("")
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  // Relationships
  swiggyRestaurant SwiggyRestaurant @relation(fields: [swiggyRestaurantId], references: [id])

  @@index([swiggyRestaurantId])
}
